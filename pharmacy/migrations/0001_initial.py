# Generated by Django 5.0.6 on 2024-08-20 11:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("person", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PharmacyStatus",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=20)),
                ("description", models.CharField(blank=True, max_length=200)),
            ],
            options={
                "db_table": "LKP_PHS_PharmacyStatus",
            },
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(db_column="grp_name", max_length=128)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "OPT_GRP_Group",
            },
        ),
        migrations.CreateModel(
            name="GroupSalesInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "group_name",
                    models.CharField(db_column="gsi_group_name", max_length=128),
                ),
                (
                    "reporting_period",
                    models.CharField(db_column="gsi_reporting_period", max_length=128),
                ),
                (
                    "source_compliance_pct_base_member",
                    models.IntegerField(
                        db_column="gsi_source_compliance_pct_base_member"
                    ),
                ),
                (
                    "source_compliance_pct_new_member",
                    models.IntegerField(
                        db_column="gsi_source_compliance_pct_new_member"
                    ),
                ),
                ("total_sales", models.IntegerField(db_column="gsi_total_sales")),
                ("rx_sales", models.IntegerField(db_column="gsi_rx_sales")),
                ("brand_rx_sales", models.IntegerField(db_column="gsi_brand_rx_sales")),
                (
                    "generic_rx_sales",
                    models.IntegerField(db_column="gsi_generic_rx_sales"),
                ),
                (
                    "gpo_generic_sales",
                    models.IntegerField(db_column="gsi_gpo_generic_sales"),
                ),
                ("source_sales", models.IntegerField(db_column="gsi_source_sales")),
                (
                    "source_override_sales",
                    models.IntegerField(db_column="gsi_source_override_sales"),
                ),
                (
                    "net_source_sales",
                    models.IntegerField(db_column="gsi_net_source_sales"),
                ),
                (
                    "generic_source_sales",
                    models.IntegerField(db_column="gsi_generic_source_sales"),
                ),
                (
                    "generic_source_overrides",
                    models.IntegerField(db_column="gsi_generic_source_overrides"),
                ),
                (
                    "net_generic_source_sales",
                    models.IntegerField(db_column="gsi_net_generic_source_sales"),
                ),
                (
                    "antidiabetic_sales",
                    models.IntegerField(db_column="gsi_antidiabetic_sales"),
                ),
                (
                    "antidiabeticglp1_sales",
                    models.IntegerField(db_column="gsi_antidiabeticglp1_sales"),
                ),
                (
                    "antipsychotic_sales",
                    models.IntegerField(db_column="gsi_antipsychotic_sales"),
                ),
                ("spx_sales", models.IntegerField(db_column="gsi_spx_sales")),
                ("spx_hiv", models.IntegerField(db_column="gsi_spx_hiv")),
                ("spx_hep_c", models.IntegerField(db_column="gsi_spx_hep_c")),
                ("spx_cancer", models.IntegerField(db_column="gsi_spx_cancer")),
                ("spx_ra", models.IntegerField(db_column="gsi_spx_ra")),
                ("spx_ms", models.IntegerField(db_column="gsi_spx_ms")),
                ("spd_sales", models.IntegerField(db_column="gsi_spd_sales")),
                (
                    "brand_rx_dropship_sales",
                    models.IntegerField(db_column="gsi_brand_rx_dropship_sales"),
                ),
                ("non_rx_sales", models.IntegerField(db_column="gsi_non_rx_sales")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        db_column="gsi_group",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="groupsalesinfo_group_group_id",
                        to="pharmacy.group",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "OPT_GSI_GroupSalesInfo",
            },
        ),
        migrations.CreateModel(
            name="Pharmacy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "corp_name",
                    models.CharField(db_column="phm_corp_name", max_length=128),
                ),
                ("dba", models.CharField(db_column="phm_dba", max_length=128)),
                ("email", models.CharField(db_column="phm_email", max_length=128)),
                ("phone", models.IntegerField(db_column="phm_phone")),
                ("fax", models.IntegerField(db_column="phm_fax")),
                ("state_license", models.IntegerField(db_column="phm_state_license")),
                ("dea", models.TextField(db_column="phm_dea")),
                ("npi", models.IntegerField(db_column="phm_npi")),
                ("ncpa", models.CharField(db_column="phm_ncpa", max_length=128)),
                (
                    "principal_name",
                    models.CharField(db_column="phm_principal_name", max_length=128),
                ),
                ("principal_cell", models.IntegerField(db_column="phm_principal_cell")),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        db_column="phm_address",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pharmacy_address_address_id",
                        to="person.address",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sales_contact",
                    models.ForeignKey(
                        blank=True,
                        db_column="phm_sales_contact",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pharmacy_sales_contact_person_id",
                        to="person.person",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        blank=True,
                        db_column="phm_status",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pharmacy_status_pharmacystatus_id",
                        to="pharmacy.pharmacystatus",
                    ),
                ),
            ],
            options={
                "db_table": "OPT_PHM_Pharmacy",
            },
        ),
        migrations.CreateModel(
            name="PharmacySalesInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "cust_ship_number",
                    models.IntegerField(db_column="psi_cust_ship_number"),
                ),
                (
                    "cust_sold_number",
                    models.IntegerField(db_column="psi_cust_sold_number"),
                ),
                (
                    "ship_to_customer_name",
                    models.IntegerField(db_column="psi_ship_to_customer_name"),
                ),
                ("dba", models.CharField(db_column="psi_dba", max_length=128)),
                (
                    "volume_group_number",
                    models.IntegerField(db_column="psi_volume_group_number"),
                ),
                (
                    "volume_group_name",
                    models.CharField(db_column="psi_volume_group_name", max_length=128),
                ),
                ("campus_number", models.IntegerField(db_column="psi_campus_number")),
                (
                    "ship_to_default_delivery_plant",
                    models.CharField(
                        db_column="psi_ship_to_default_delivery_plant", max_length=128
                    ),
                ),
                (
                    "source_compliance_pct_base_member",
                    models.IntegerField(
                        db_column="psi_source_compliance_pct_base_member"
                    ),
                ),
                (
                    "source_compliance_pct_new_member",
                    models.IntegerField(
                        db_column="psi_source_compliance_pct_new_member"
                    ),
                ),
                ("total_sales", models.IntegerField(db_column="psi_total_sales")),
                ("rx_sales", models.IntegerField(db_column="psi_rx_sales")),
                ("brand_rx_sales", models.IntegerField(db_column="psi_brand_rx_sales")),
                (
                    "generic_rx_sales",
                    models.IntegerField(db_column="psi_generic_rx_sales"),
                ),
                (
                    "gpo_generic_sales",
                    models.IntegerField(db_column="psi_gpo_generic_sales"),
                ),
                ("source_sales", models.IntegerField(db_column="psi_source_sales")),
                (
                    "source_override_sales",
                    models.IntegerField(db_column="psi_source_override_sales"),
                ),
                (
                    "net_source_sales",
                    models.IntegerField(db_column="psi_net_source_sales"),
                ),
                (
                    "generic_source_sales",
                    models.IntegerField(db_column="psi_generic_source_sales"),
                ),
                (
                    "generic_source_overrides",
                    models.IntegerField(db_column="psi_generic_source_overrides"),
                ),
                (
                    "net_generic_source_sales",
                    models.IntegerField(db_column="psi_net_generic_source_sales"),
                ),
                (
                    "antidiabetic_sales",
                    models.IntegerField(db_column="psi_antidiabetic_sales"),
                ),
                (
                    "antidiabeticglp1_sales",
                    models.IntegerField(db_column="psi_antidiabeticglp1_sales"),
                ),
                (
                    "antipsychotic_sales",
                    models.IntegerField(db_column="psi_antipsychotic_sales"),
                ),
                ("spx_sales", models.IntegerField(db_column="psi_spx_sales")),
                ("spx_hiv", models.IntegerField(db_column="psi_spx_hiv")),
                ("spx_hep_c", models.IntegerField(db_column="psi_spx_hep_c")),
                ("spx_cancer", models.IntegerField(db_column="psi_spx_cancer")),
                ("spx_ra", models.IntegerField(db_column="psi_spx_ra")),
                ("spx_ms", models.IntegerField(db_column="psi_spx_ms")),
                ("spd_sales", models.IntegerField(db_column="psi_spd_sales")),
                (
                    "brand_rx_dropship_sales",
                    models.IntegerField(db_column="psi_brand_rx_dropship_sales"),
                ),
                ("non_rx_sales", models.IntegerField(db_column="psi_non_rx_sales")),
                (
                    "affiliation_level3_number",
                    models.IntegerField(db_column="psi_affiliation_level3_number"),
                ),
                (
                    "affiliation_level3_name",
                    models.CharField(
                        db_column="psi_affiliation_level3 _name", max_length=128
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pharmacy",
                    models.ForeignKey(
                        blank=True,
                        db_column="psi_pharmacy",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pharmacysalesinfo_pharmacy_pharmacy_id",
                        to="pharmacy.pharmacy",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "OPT_PSI_PharmacySalesInfo",
            },
        ),
        migrations.CreateModel(
            name="VolumeGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("number", models.IntegerField(db_column="vol_number")),
                ("name", models.CharField(db_column="vol_name", max_length=128)),
                (
                    "location_count",
                    models.IntegerField(db_column="vol_location_count", default=0.0),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "OPT_VOL_VolumeGroup",
            },
        ),
        migrations.CreateModel(
            name="VolumeGroupSalesInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "volume_group_number",
                    models.IntegerField(db_column="vgi_volume_group_number"),
                ),
                (
                    "volume_group_name",
                    models.CharField(db_column="vgi_volume_group_name", max_length=128),
                ),
                (
                    "number_of_campus_locations",
                    models.IntegerField(db_column="vgi_number_of_campus_locations"),
                ),
                (
                    "source_compliance_pct_base_member",
                    models.IntegerField(
                        db_column="vgi_source_compliance_pct_base_member"
                    ),
                ),
                (
                    "source_compliance_pct_new_member",
                    models.IntegerField(
                        db_column="vgi_source_compliance_pct_new_member"
                    ),
                ),
                ("total_sales", models.IntegerField(db_column="vgi_total_sales")),
                ("rx_sales", models.IntegerField(db_column="vgi_rx_sales")),
                ("brand_rx_sales", models.IntegerField(db_column="vgi_brand_rx_sales")),
                (
                    "generic_rx_sales",
                    models.IntegerField(db_column="vgi_generic_rx_sales"),
                ),
                (
                    "gpo_generic_sales",
                    models.IntegerField(db_column="vgi_gpo_generic_sales"),
                ),
                ("source_sales", models.IntegerField(db_column="vgi_source_sales")),
                (
                    "source_override_sales",
                    models.IntegerField(db_column="vgi_source_override_sales"),
                ),
                (
                    "net_source_sales",
                    models.IntegerField(db_column="vgi_net_source_sales"),
                ),
                (
                    "generic_source_sales",
                    models.IntegerField(db_column="vgi_generic_source_sales"),
                ),
                (
                    "generic_source_overrides",
                    models.IntegerField(db_column="vgi_generic_source_overrides"),
                ),
                (
                    "net_generic_source_sales",
                    models.IntegerField(db_column="vgi_net_generic_source_sales"),
                ),
                (
                    "antidiabetic_sales",
                    models.IntegerField(db_column="vgi_antidiabetic_sales"),
                ),
                (
                    "antidiabeticglp1_sales",
                    models.IntegerField(db_column="vgi_antidiabeticglp1_sales"),
                ),
                (
                    "antipsychotic_sales",
                    models.IntegerField(db_column="vgi_antipsychotic_sales"),
                ),
                ("spx_sales", models.IntegerField(db_column="vgi_spx_sales")),
                ("spx_hiv", models.IntegerField(db_column="vgi_spx_hiv")),
                ("spx_hep_c", models.IntegerField(db_column="vgi_spx_hep_c")),
                ("spx_cancer", models.IntegerField(db_column="vgi_spx_cancer")),
                ("spx_ra", models.IntegerField(db_column="vgi_spx_ra")),
                ("spx_ms", models.IntegerField(db_column="vgi_spx_ms")),
                ("spd_sales", models.IntegerField(db_column="vgi_spd_sales")),
                (
                    "brand_rx_dropship_sales",
                    models.IntegerField(db_column="vgi_brand_rx_dropship_sales"),
                ),
                ("non_rx_sales", models.IntegerField(db_column="vgi_non_rx_sales")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        related_query_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "volumegroup",
                    models.ForeignKey(
                        blank=True,
                        db_column="vgi_volumegroup",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="volumegroupsalesinfo_volumegroup_volumegroup_id",
                        to="pharmacy.volumegroup",
                    ),
                ),
            ],
            options={
                "db_table": "OPT_VGI_VolumeGroupSalesInfo",
            },
        ),
    ]
