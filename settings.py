"""
Django settings for Aspyr project.

Generated by 'django-admin startproject' using Django 5.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
from urllib.parse import urlparse
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
dotenv_path = os.path.join(os.path.dirname(__file__), ".env")
load_dotenv(dotenv_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ["SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ZIP_EXCLUDED_FILES = ["__MACOSX", "._"]

SYSTEM_APPS = ["pharmacy", "person", "audit"]

BASE_APPS = ["core", "users", "correspondence"]

DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",
    "rest_framework",
    "corsheaders",
    "rest_framework.authtoken",
    "django_filters",
    "rest_framework_swagger",
    "drf_yasg",
    "django_compiler",
]

INSTALLED_APPS = DJANGO_APPS + BASE_APPS + SYSTEM_APPS


SWAGGER_SETTINGS = {"SECURITY_DEFINITIONS": {"Basic": {"type": "basic"}}}

ALLOWED_HOSTS = [
    # "allwin-devsite-backend-LB-1872526359.us-east-1.elb.amazonaws.com",
    # "allwin-devsite-frontend-LB-1072515392.us-east-1.elb.amazonaws.com",
    "prodbe.rxaudit.com",
    "prod.rxaudit.com",
    "devbe.rxaudit.com",
    "dev.rxaudit.com",
    "127.0.0.1",
    "localhost",
    "192.168.1.19",
    "192.168.1.37",
    ".ngrok-free.app",
    "0.0.0.0",
    "*",
    "10.0.0.*",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",
    "core.middleware.DisableCSRFMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "core.middleware.UserAuthenticationMiddleware",
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{asctime} {levelname} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{asctime} {levelname} {module} {message}",
            "style": "{",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file", "console"],
            "propagate": True,
        }
    },
    "handlers": {
        "console": {
            "level": os.environ["DJANGO_LOG_LEVEL"],
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
        "file": {
            "level": os.environ["DJANGO_LOG_LEVEL"],
            "class": "logging.FileHandler",
            "formatter": "simple",
            "filename": "./debug.log",
        },
    },
}

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DB_CONN = urlparse(os.environ["DATABASE_URL"])
DATABASES = {
    "default": {
        "NAME": DB_CONN.path[1:],
        "ENGINE": DB_CONN.scheme,
        "USER": DB_CONN.username,
        "PASSWORD": DB_CONN.password,
        "HOST": DB_CONN.hostname,
        "PORT": DB_CONN.port,
    }
}

AUTH_USER_MODEL = "users.User"


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"


REST_FRAMEWORK = {
    # "DEFAULT_PERMISSION_CLASSES": [
    #     "rest_framework.permissions.DjangoObjectPermissions",
    # ],
    "DEFAULT_FILTER_BACKENDS": ["core.utils.AllFieldsDjangoFilterBackend"],
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",
    # "SESSION_SERIALIZER": "django.contrib.sessions.serializers.PickleSerializer",
    # DEFAULT_PAGINATION_CLASS
}

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_METHODS = (
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
)
CSRF_TRUSTED_ORIGINS = [
    # "http://allwin-devsite-backend-lb-1872526359.us-east-1.elb.amazonaws.com",
    # "http://allwin-devsite-frontend-lb-1072515392.us-east-1.elb.amazonaws.com",
    # "https://allwin-devsite-backend-lb-1872526359.us-east-1.elb.amazonaws.com",
    # "https://allwin-devsite-frontend-lb-1072515392.us-east-1.elb.amazonaws.com",
    # "http://buyinggroupbe.allwinrx.com",
    # "http://buyinggroup.allwinrx.com",
    "https://prodbe.rxaudit.com",
    "https://prod.rxaudit.com",
    "https://devbe.rxaudit.com",
    "https://dev.rxaudit.com",
    # "http://*",
    # "https://*",
    # "http://localhost:1337",
    "http://localhost:3000",
    "http://localhost:8000",
    "http://0.0.0.0:8000",
    "http://0.0.0.0:3000",
]


CSRF_COOKIE_SECURE = True
CSRF_COOKIE_NAME = "django_csrf_token"
CSRF_COOKIE_SAMESITE = "None"
SECURE_CROSS_ORIGIN_OPENER_POLICY = None
CSRF_USE_SESSIONS = False
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = (
    "accept",
    "authorization",
    "content-type",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
)

CORS_ALLOWED_ORIGINS = [
    # "http://allwin-devsite-backend-lb-1872526359.us-east-1.elb.amazonaws.com",
    # "http://allwin-devsite-frontend-lb-1072515392.us-east-1.elb.amazonaws.com",
    # "https://allwin-devsite-backend-lb-1872526359.us-east-1.elb.amazonaws.com",
    # "https://allwin-devsite-frontend-lb-1072515392.us-east-1.elb.amazonaws.com",
    # "http://buyinggroupbe.allwinrx.com",
    # "http://buyinggroup.allwinrx.com",
    "https://prodbe.rxaudit.com",
    "https://prod.rxaudit.com",
    "https://devbe.rxaudit.com",
    "https://dev.rxaudit.com",
    "http://localhost:1337",
    "http://localhost:3000",
    "http://localhost:8000",
    "http://0.0.0.0:8000",
    "http://0.0.0.0:3000",
    # "http://*:3000",
    # "http://*:8000",
]

AUTH_TOKEN_LIFE = 1440  # Mentioned in minutes
CSRF_COOKIE_AGE = 86400
ADMINS = {"admin": "admin@aspyrlabs.com"}

EMAIL_BACKEND = os.environ["EMAIL_BACKEND"]
EMAIL_HOST = os.environ["EMAIL_HOST"]
EMAIL_USE_TLS = bool(os.environ["EMAIL_USE_TLS"])
EMAIL_PORT = int(os.environ["EMAIL_PORT"])
EMAIL_HOST_USER = os.environ["EMAIL_HOST_USER"]
EMAIL_HOST_PASSWORD = os.environ["EMAIL_HOST_PASSWORD"]

EMAIL_FAILURE_NOTIFICATION_LIST = os.environ["EMAIL_FAILURE_NOTIFICATION_LIST"].split(
    ","
)
AWS_SERVER_ACCESS_KEY = os.environ["AWS_SERVER_ACCESS_KEY"]
AWS_SERVER_SECRET_KEY = os.environ["AWS_SERVER_SECRET_KEY"]
AWS_SERVER_REGION = os.environ["AWS_SERVER_REGION"]
AWS_BUCKET = os.environ["AWS_BUCKET"]
HOST_URL = os.environ["HOST_URL"]

EMAIL_FILES_LOCATION = "email_files"
PDF_GENERATION_LOCATION = "pdf_generations"
PDF_TEMPLATES = "pdf_templates"
AUDIT_FILES_LOCATION = "audit_files"
CLEAN_FILES_LOCATION = "clean_files"
